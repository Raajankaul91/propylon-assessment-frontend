{"ast":null,"code":"import config from '../config';\nimport axios from 'axios';\nexport default {\n  /*\n   Sets the base url for talking to api\n  */\n  getBaseUrl() {\n    return config['api_address'];\n  },\n  // the bearer token is retrieved from local storage and returned in correct format for api calls\n  getAuthHeader() {\n    if (localStorage && localStorage.getItem('access_token')) {\n      return 'token ' + localStorage.getItem('access_token');\n    }\n    return null;\n  },\n  /*\n      Executes a GET Request on the API\n  */\n  get(url, callback) {\n    let token = this.getAuthHeader();\n    let header = {};\n    if (token) {\n      header = {\n        \"Authorization\": token\n      };\n    }\n    const options = {\n      method: 'GET',\n      headers: header,\n      url: this.getBaseUrl() + url\n    };\n    axios(options).then(function (response) {\n      callback(null, response);\n    }).catch(function (error) {\n      callback(error.response, null);\n    });\n  },\n  /*\n      Executes a POST request on the API\n  */\n  post(url, data, callback) {\n    let token = this.getAuthHeader();\n    let header = {};\n    if (token) {\n      header = {\n        \"Authorization\": token\n      };\n    }\n    const options = {\n      method: 'POST',\n      headers: header,\n      // dataType: 'json',\n      // contentType: 'application/json',\n      data: data,\n      url: this.getBaseUrl() + url\n    };\n    axios(options).then(function (response) {\n      callback(null, response);\n    }).catch(function (error) {\n      callback(error.response, null);\n    });\n  }\n};","map":{"version":3,"names":["config","axios","getBaseUrl","getAuthHeader","localStorage","getItem","get","url","callback","token","header","options","method","headers","then","response","catch","error","post","data"],"sources":["/Users/rajankaul/Desktop/propelon/propylon-assessment-test/src/api/index.js"],"sourcesContent":["import config from '../config'\nimport axios from 'axios';\n\nexport default {\n    /*\n\t    Sets the base url for talking to api\n\t*/\n\tgetBaseUrl(){\n\t\treturn config['api_address'];\n\t},\n\n    // the bearer token is retrieved from local storage and returned in correct format for api calls\n    getAuthHeader() {\n    \n        if (localStorage && localStorage.getItem('access_token')) {\n            return 'token ' + localStorage.getItem('access_token');\n        }\n    \n        return null;\n    },\n\n    /*\n        Executes a GET Request on the API\n\t*/\n\tget(url, callback) {\n\n        let token = this.getAuthHeader();\n            let header = {};\n    \n            if (token) {\n                header = { \"Authorization\": token };\n            }\n    \n            const options = {\n                method: 'GET',\n                headers: header,\n                url: this.getBaseUrl() + url,\n              };\n    \n            axios(options).then(function (response) {\n                callback(null, response);\n              })\n              .catch(function (error) {\n                callback(error.response, null);\n              });\n        },\n\n    /*\n        Executes a POST request on the API\n    */\n\tpost(url, data, callback){\n\n        let token = this.getAuthHeader();\n            let header = {};\n    \n            if (token) { \n                header = { \"Authorization\": token };\n            }\n        \n            const options = {\n                method: 'POST',\n                headers: header,\n                // dataType: 'json',\n                // contentType: 'application/json',\n                data: data,\n                url: this.getBaseUrl() + url,\n              };\n    \n            axios(options).then(function (response) {\n              callback(null, response);\n            })\n            .catch(function (error) {\n              callback(error.response, null);\n            });\n        },\n    \n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe;EACX;AACJ;AACA;EACCC,UAAUA,CAAA,EAAE;IACX,OAAOF,MAAM,CAAC,aAAa,CAAC;EAC7B,CAAC;EAEE;EACAG,aAAaA,CAAA,EAAG;IAEZ,IAAIC,YAAY,IAAIA,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;MACtD,OAAO,QAAQ,GAAGD,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC1D;IAEA,OAAO,IAAI;EACf,CAAC;EAED;AACJ;AACA;EACCC,GAAGA,CAACC,GAAG,EAAEC,QAAQ,EAAE;IAEZ,IAAIC,KAAK,GAAG,IAAI,CAACN,aAAa,CAAC,CAAC;IAC5B,IAAIO,MAAM,GAAG,CAAC,CAAC;IAEf,IAAID,KAAK,EAAE;MACPC,MAAM,GAAG;QAAE,eAAe,EAAED;MAAM,CAAC;IACvC;IAEA,MAAME,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEH,MAAM;MACfH,GAAG,EAAE,IAAI,CAACL,UAAU,CAAC,CAAC,GAAGK;IAC3B,CAAC;IAEHN,KAAK,CAACU,OAAO,CAAC,CAACG,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACpCP,QAAQ,CAAC,IAAI,EAAEO,QAAQ,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBT,QAAQ,CAACS,KAAK,CAACF,QAAQ,EAAE,IAAI,CAAC;IAChC,CAAC,CAAC;EACR,CAAC;EAEL;AACJ;AACA;EACCG,IAAIA,CAACX,GAAG,EAAEY,IAAI,EAAEX,QAAQ,EAAC;IAElB,IAAIC,KAAK,GAAG,IAAI,CAACN,aAAa,CAAC,CAAC;IAC5B,IAAIO,MAAM,GAAG,CAAC,CAAC;IAEf,IAAID,KAAK,EAAE;MACPC,MAAM,GAAG;QAAE,eAAe,EAAED;MAAM,CAAC;IACvC;IAEA,MAAME,OAAO,GAAG;MACZC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEH,MAAM;MACf;MACA;MACAS,IAAI,EAAEA,IAAI;MACVZ,GAAG,EAAE,IAAI,CAACL,UAAU,CAAC,CAAC,GAAGK;IAC3B,CAAC;IAEHN,KAAK,CAACU,OAAO,CAAC,CAACG,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACtCP,QAAQ,CAAC,IAAI,EAAEO,QAAQ,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBT,QAAQ,CAACS,KAAK,CAACF,QAAQ,EAAE,IAAI,CAAC;IAChC,CAAC,CAAC;EACN;AAER,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}