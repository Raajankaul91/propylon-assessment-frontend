{"ast":null,"code":"import * as apiFile from \"../api/files.js\";\nexport default {\n  name: \"FileVersion\",\n  data() {\n    return {\n      files: {},\n      searchFile: false,\n      searchValue: \"\"\n    };\n  },\n  mounted() {\n    this.getFiles();\n  },\n  methods: {\n    getFiles: function () {\n      apiFile.getFiles((error, response) => {\n        if (response) {\n          this.files = response.files;\n        } else {\n          console.log(\"Could not retreive files\");\n        }\n      });\n    },\n    filterFiles: function () {\n      const searchPeices = this.searchValue.split(\"?\");\n      const fileName = searchPeices[0].split('/').pop();\n      // const fileURL = searchPeices[0].split(\"/\" + fileName)[0]\n      // const fileVersion = searchPeices[1].split(\"version=\")[1]\n\n      this.files = this.files.filter(file => {\n        console.log(fileName);\n        console.log(file['file_name']);\n        console.log(\"------------------------\");\n        fileName !== file.file_name;\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiFile","name","data","files","searchFile","searchValue","mounted","getFiles","methods","error","response","console","log","filterFiles","searchPeices","split","fileName","pop","filter","file","file_name"],"sources":["/Users/rajankaul/Desktop/propelon/propylon-assessment-test/src/components/Files.vue"],"sourcesContent":["<template>\n  <div v-if=\"files.length>0\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">File Name</th>\n            <th scope=\"col\">Location</th>\n            <th scope=\"col\">Version no.</th>\n            <!-- <th scope=\"col\">Handle</th> -->\n            </tr>\n        </thead>\n        <tbody>\n            <tr  v-for=\"file in files\" :key=\"file.id\">\n                <td></td>\n            <td>{{ file.file_name }}</td>\n            <td>{{ file.location }}</td>\n            <td>{{ file.version_number }}</td>\n            </tr>\n        </tbody>\n    </table>\n    <form class=\"d-flex\" role=\"search\">\n        <button type=\"button\" class=\"btn btn-primary left-margin\" @click=\"searchFile=!searchFile\">Search File</button>\n    </form>\n    <div v-if=\"searchFile\" class=\"input-group mb-3 search-bar left-margin\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"sample/location/file_name.pdf?version=1 (Example)\" aria-label=\"Username\" v-model=\"searchValue\" aria-describedby=\"basic-addon1\">\n        <span class=\"input-group-text hand btn btn-primary\" id=\"basic-addon1\" @click=\"filterFiles()\">search</span>\n    </div>\n  </div>\n  <div class=\"center-screen\" v-else>\n    <div class=\"card text-center \">\n        <div class=\"card-header\">\n            Files\n        </div>\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">No files found</h5>\n            <p class=\"card-text\">Please add files using the button below to be displayed here</p>\n        </div>\n        <div class=\"card-footer text-muted\">\n            :)\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as apiFile from \"../api/files.js\";\n\n\nexport default {\n    name:\"FileVersion\",\n    data(){\n        return{\n            files:{},\n            searchFile: false,\n            searchValue: \"\"\n        }\n    },\n    mounted(){\n        this.getFiles();\n    },  \n    methods:{\n        getFiles: function(){\n            apiFile.getFiles((error, response) => {\n                if(response){\n                    this.files = response.files;\n                }else{\n                    console.log(\"Could not retreive files\")\n                }\n\n            });\n        },\n\n        filterFiles: function(){\n\n            const searchPeices = this.searchValue.split(\"?\");\n            const fileName = searchPeices[0].split('/').pop();\n            // const fileURL = searchPeices[0].split(\"/\" + fileName)[0]\n            // const fileVersion = searchPeices[1].split(\"version=\")[1]\n            \n\n            this.files = this.files.filter((file) => {\n                console.log(fileName)\n                console.log(file['file_name'])\n                console.log(\"------------------------\")\n                fileName!==file.file_name;\n            });\n        }\n    }\n\n}\n</script>\n\n<style scoped>\n.center-screen{\n  width: 500px;\n  height: 300px;\n  margin: auto;\n  margin-top: 40px;\n  padding: 10px;\n}\n.left-margin{\n  margin-left: 20px;\n}\n\n.search-bar{\n    width: 500px;\n    margin-top: 20px\n}\n</style>"],"mappings":"AA8CA,OAAO,KAAKA,OAAM,MAAO,iBAAiB;AAG1C,eAAe;EACXC,IAAI,EAAC,aAAa;EAClBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAC,CAAC,CAAC;MACRC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAC;IACJD,QAAQ,EAAE,SAAAA,CAAA,EAAU;MAChBP,OAAO,CAACO,QAAQ,CAAC,CAACE,KAAK,EAAEC,QAAQ,KAAK;QAClC,IAAGA,QAAQ,EAAC;UACR,IAAI,CAACP,KAAI,GAAIO,QAAQ,CAACP,KAAK;QAC/B,CAAC,MAAI;UACDQ,OAAO,CAACC,GAAG,CAAC,0BAA0B;QAC1C;MAEJ,CAAC,CAAC;IACN,CAAC;IAEDC,WAAW,EAAE,SAAAA,CAAA,EAAU;MAEnB,MAAMC,YAAW,GAAI,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC,GAAG,CAAC;MAChD,MAAMC,QAAO,GAAIF,YAAY,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAAC,CAAC;MACjD;MACA;;MAGA,IAAI,CAACd,KAAI,GAAI,IAAI,CAACA,KAAK,CAACe,MAAM,CAAEC,IAAI,IAAK;QACrCR,OAAO,CAACC,GAAG,CAACI,QAAQ;QACpBL,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC,WAAW,CAAC;QAC7BR,OAAO,CAACC,GAAG,CAAC,0BAA0B;QACtCI,QAAQ,KAAGG,IAAI,CAACC,SAAS;MAC7B,CAAC,CAAC;IACN;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}